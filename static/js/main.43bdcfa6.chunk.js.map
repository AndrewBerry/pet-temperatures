{"version":3,"sources":["components/Pet/Pet.js","components/Pet/PetContainer.js","hooks/useFirebaseDoc.js","components/App/App.js","components/App/AppLoading.js","index.js","components/App/AppContainer.js","hooks/useFirebaseInit.js"],"names":["Pet","name","temps","length","w","l","h","hu","useState","timeAgo","setTimeAgo","useEffect","recalculateTimeAgo","ta","Date","intervalId","setInterval","clearInterval","humidity","parseInt","className","PetContainer","petId","petData","docPath","data","setData","firebase","firestore","doc","onSnapshot","snapshot","error","console","useFirebaseDoc","App","AppLoading","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDom","render","isInit","setIsInit","unsubscribe","auth","onAuthStateChanged","useFirebaseInit","document","getElementById"],"mappings":"yUAKO,SAASA,EAAT,GAA+B,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAAS,EACXA,EAAMA,EAAMC,OAAS,GAArCC,EAD2B,EAC3BA,EAAGC,EADwB,EACxBA,EAAGC,EADqB,EACrBA,EAAGC,EADkB,EAClBA,GADkB,EAGHC,qBAHG,mBAG3BC,EAH2B,KAGlBC,EAHkB,KAInCC,qBAAU,WACR,SAASC,IACPF,EAAWG,IAAG,IAAIC,KAAKV,KAGzB,IAAMW,EAAaC,YAAYJ,EAAoB,MAGnD,OAFAA,IAEO,WACLK,cAAcF,MAEf,CAAEX,IAEL,IAAMc,EAAWC,SAASZ,GAE1B,OACE,yBAAKa,UAAU,OACb,yBAAKA,UAAU,eAEf,yBAAKA,UAAU,aAAanB,GAC5B,yBAAKmB,UAAU,aAAaX,GAE5B,yBAAKW,UAAU,8BACb,yBAAKA,UAAU,mBAAf,OACA,yBAAKA,UAAU,mBAAmBf,EAAE,0BAAMe,UAAU,kBAAhB,UAEtC,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,mBAAf,QACA,yBAAKA,UAAU,mBAAmBd,EAAE,0BAAMc,UAAU,kBAAhB,UAEtC,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,mBAAf,YACA,yBAAKA,UAAU,mBAAmBF,EAAS,0BAAME,UAAU,wCAAhB,QCrC5C,SAASC,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACvBC,ECFD,SAAwBC,GAAU,IAAD,EACZhB,mBAAS,MADG,mBAC9BiB,EAD8B,KACxBC,EADwB,KAiBtC,OAdAf,qBAAU,WAIR,OAHAe,EAAQ,MAEOC,IAASC,YAAYC,IAAIL,GAC1BM,YACZ,SAAAC,GACEL,EAAQK,EAASN,WAEnB,SAAAO,GACEC,QAAQD,MAAM,UAAWA,QAG5B,CAAER,IAEEC,EDfSS,CAAe,QAAD,OAASZ,IAEvC,OAAKC,EAIE,kBAAC,EAAQA,GAHP,+C,MEHJ,SAASY,IACd,OACE,yBAAKf,UAAU,OACb,kBAACC,EAAD,CAAcC,MAAM,aCNnB,SAASc,IACd,OACE,yBAAKhB,UAAU,cAAf,c,MCMJO,IAASU,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,mCACZE,YAAaF,0CACbG,UAAWH,mBACXI,cAAeJ,+BACfK,kBAAmBL,eACnBM,MAAON,8CAGTO,IAASC,OAAO,mBCdT,WAGL,OCNK,WAA4B,IAAD,EACJvC,oBAAS,GADL,mBACzBwC,EADyB,KACjBC,EADiB,KAUhC,OAPAtC,qBAAU,WACR,IAAMuC,EAAcvB,IAASwB,OAAOC,oBAAmB,WACrDH,GAAU,GACVC,SAED,IAEI,CACLF,UDPiBK,GAAXL,OAMD,kBAAC,EAAD,MAHE,kBAACZ,EAAD,QDUK,MAAkBkB,SAASC,eAAe,W","file":"static/js/main.43bdcfa6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ta from \"s-ago\";\n\nimport \"./Pet.css\";\n\nexport function Pet({ name, temps }) {\n  const { w, l, h, hu } = temps[temps.length - 1];\n\n  const [ timeAgo, setTimeAgo ] = useState();\n  useEffect(() => {\n    function recalculateTimeAgo() {\n      setTimeAgo(ta(new Date(w)));\n    }\n\n    const intervalId = setInterval(recalculateTimeAgo, 15000);\n    recalculateTimeAgo();\n\n    return () => {\n      clearInterval(intervalId);\n    }\n  }, [ w ]);\n\n  const humidity = parseInt(hu);\n\n  return (\n    <div className=\"Pet\">\n      <div className=\"Pet__chart\"></div>\n\n      <div className=\"Pet__name\">{name}</div>\n      <div className=\"Pet__meta\">{timeAgo}</div>\n\n      <div className=\"Pet__value Pet__value--low\">\n        <div className=\"Pet__valueTitle\">Low</div>\n        <div className=\"Pet__valueValue\">{l}<span className=\"Pet__valueUnit\">&deg;</span></div>\n      </div>\n      <div className=\"Pet__value Pet__value--high\">\n        <div className=\"Pet__valueTitle\">High</div>\n        <div className=\"Pet__valueValue\">{h}<span className=\"Pet__valueUnit\">&deg;</span></div>\n      </div>\n      <div className=\"Pet__value Pet__value--humidity\">\n        <div className=\"Pet__valueTitle\">Humidity</div>\n        <div className=\"Pet__valueValue\">{humidity}<span className=\"Pet__valueUnit Pet__valueUnit--small\">%</span></div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useFirebaseDoc } from \"../../hooks/useFirebaseDoc\";\nimport { Pet } from \"./Pet\";\n\nexport function PetContainer({ petId }) {\n  const petData = useFirebaseDoc(`pets/${petId}`);\n\n  if (!petData) {\n    return <div>Loading pet...</div>;\n  }\n\n  return <Pet {...petData} />;\n}\n","import { useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\n\nexport function useFirebaseDoc(docPath) {\n  const [ data, setData ] = useState(null);\n\n  useEffect(() => {\n    setData(null);\n\n    const docRef = firebase.firestore().doc(docPath);\n    return docRef.onSnapshot(\n      snapshot => {\n        setData(snapshot.data());\n      },\n      error => {\n        console.error(\"Error: \", error);\n      }\n    );\n  }, [ docPath ]);\n\n  return data;\n}\n","import React from \"react\";\nimport { PetContainer } from \"../Pet/PetContainer\";\n\nimport \"./App.css\";\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <PetContainer petId=\"cynthia\" />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function AppLoading() {\n  return (\n    <div className=\"AppLoading\">\n      Loading...\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport { AppContainer } from \"./components/App/AppContainer\";\n\nimport \"./index.css\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nReactDom.render(<AppContainer />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport { useFirebaseInit } from \"../../hooks/useFirebaseInit\";\n\nimport { App } from \"./App\";\nimport { AppLoading } from \"./AppLoading\";\n\nexport function AppContainer() {\n  const { isInit } = useFirebaseInit();\n\n  if (!isInit) {\n    return <AppLoading />;\n  }\n\n  return <App />;\n};\n","import { useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\n\nexport function useFirebaseInit() {\n  const [isInit, setIsInit] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(() => {\n      setIsInit(true);\n      unsubscribe();\n    });\n  }, []);\n\n  return {\n    isInit\n  };\n}\n"],"sourceRoot":""}